{"ast":null,"code":"var _jsxFileName = \"/Users/riteshsharma/Face_Recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = (region, width, height) => {\n      const faceRegion = region.region_info.bounding_box;\n      return {\n        leftCol: faceRegion.left_col * width,\n        topRow: faceRegion.top_row * height,\n        rightCol: width - faceRegion.right_col * width,\n        bottomRow: height - faceRegion.bottom_row * height\n      };\n    };\n\n    this.calculateFacesLocation = data => {\n      const clarifaiFaceRegions = data.outputs[0].data.regions;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const faceLocations = clarifaiFaceRegions.map(region => this.calculateFaceLocation(region, width, height));\n      return faceLocations;\n    };\n\n    this.displayFaceBoxes = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://infinite-wildwood-75401.herokuapp.com/imageurlfaces', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://infinite-wildwood-75401.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBoxes(this.calculateFacesLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      //this is the place where you can add the free login\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      boxes: this.state.boxes,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/riteshsharma/Face_Recognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Signin","Register","Particles","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","region","width","height","faceRegion","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","calculateFacesLocation","clarifaiFaceRegions","outputs","regions","image","document","getElementById","Number","faceLocations","map","displayFaceBoxes","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAGA,MAAMC,gBAAgB,GAAE;AACtBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAC;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,OAAO,EAAC;AACNC,QAAAA,MAAM,EAAE,IADF;AAENC,QAAAA,UAAU,EAAE;AAFN;AAFH;AADE;AADW,CAAxB;AAYA,MAAMC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAC,EADS;AAEfC,EAAAA,QAAQ,EAAC,EAFM;AAGfC,EAAAA,KAAK,EAAE,EAHQ;AAIfC,EAAAA,KAAK,EAAC,QAJS;AAKfC,EAAAA,UAAU,EAAE,KALG;AAMfC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,OAAO,EAAE,CAJL;AAKJC,IAAAA,MAAM,EAAE;AALJ;AANS,CAArB;;AAiBA,MAAMC,GAAN,SAAkB5B,SAAlB,CAA4B;AAC1B6B,EAAAA,WAAW,GAAE;AACX;;AADW,SAKbC,QALa,GAKDC,IAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAC;AAClBC,UAAAA,EAAE,EAAEQ,IAAI,CAACR,EADS;AAElBC,UAAAA,IAAI,EAAEO,IAAI,CAACP,IAFO;AAGlBC,UAAAA,KAAK,EAAEM,IAAI,CAACN,KAHM;AAIlBC,UAAAA,OAAO,EAAEK,IAAI,CAACL,OAJI;AAKlBC,UAAAA,MAAM,EAAEI,IAAI,CAACJ;AALK;AAAN,OAAd;AAOD,KAbY;;AAAA,SA6BfM,qBA7Be,GA6BS,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,KAA2B;AAC/C,YAAMC,UAAU,GAAGH,MAAM,CAACI,WAAP,CAAmBC,YAAtC;AAEA,aAAO;AACLC,QAAAA,OAAO,EAAEH,UAAU,CAACI,QAAX,GAAsBN,KAD1B;AAELO,QAAAA,MAAM,EAAEL,UAAU,CAACM,OAAX,GAAqBP,MAFxB;AAGLQ,QAAAA,QAAQ,EAAET,KAAK,GAAGE,UAAU,CAACQ,SAAX,GAAuBV,KAHpC;AAILW,QAAAA,SAAS,EAAEV,MAAM,GAAGC,UAAU,CAACU,UAAX,GAAwBX;AAJvC,OAAP;AAMD,KAtCY;;AAAA,SAwCbY,sBAxCa,GAwCajB,IAAD,IAAU;AACjC,YAAMkB,mBAAmB,GAAGlB,IAAI,CAACmB,OAAL,CAAa,CAAb,EAAgBnB,IAAhB,CAAqBoB,OAAjD;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMnB,KAAK,GAAGoB,MAAM,CAACH,KAAK,CAACjB,KAAP,CAApB;AACA,YAAMC,MAAM,GAAGmB,MAAM,CAACH,KAAK,CAAChB,MAAP,CAArB;AAEA,YAAMoB,aAAa,GAAGP,mBAAmB,CAACQ,GAApB,CAAyBvB,MAAD,IAC5C,KAAKD,qBAAL,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,MAA1C,CADoB,CAAtB;AAIA,aAAOoB,aAAP;AACD,KAnDY;;AAAA,SAsDbE,gBAtDa,GAsDOvC,KAAD,IAAW;AAC5B,WAAKa,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KAxDY;;AAAA,SA0DbwC,aA1Da,GA0DIC,KAAD,IAAW;AACzB,WAAK5B,QAAL,CAAc;AAAEf,QAAAA,KAAK,EAAG2C,KAAK,CAACC,MAAN,CAAajD;AAAvB,OAAd;AACD,KA5DY;;AAAA,SA8DbkD,cA9Da,GA8DI,MAAK;AACpB,WAAK9B,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAE,KAAK6C,KAAL,CAAW9C;AAAtB,OAAd;AAEA+C,MAAAA,KAAK,CAAC,6DAAD,EAAgE;AAC/DC,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFsD;AAG/DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBpD,UAAAA,KAAK,EAAE,KAAK8C,KAAL,CAAW9C;AADC,SAAf;AAHyD,OAAhE,CAAL,CAMOqD,IANP,CAMYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANxB,EAQCF,IARD,CAQMC,QAAQ,IAAI;AAChB,YAAGA,QAAH,EAAY;AACVP,UAAAA,KAAK,CAAC,qDAAD,EAAwD;AAC3DC,YAAAA,MAAM,EAAE,KADmD;AAE3DC,YAAAA,OAAO,EAAE;AAAC,8BAAgB;AAAjB,aAFkD;AAG3DC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB9C,cAAAA,EAAE,EAAE,KAAKwC,KAAL,CAAWzC,IAAX,CAAgBC;AADD,aAAf;AAHqD,WAAxD,CAAL,CAOC+C,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,KAAK,IAAI;AACb,iBAAKzC,QAAL,CAAc0C,MAAM,CAACC,MAAP,CAAc,KAAKZ,KAAL,CAAWzC,IAAzB,EAA+B;AAAEI,cAAAA,OAAO,EAAE+C;AAAX,aAA/B,CAAd;AACD,WAVD,EAUGG,KAVH,CAUSC,OAAO,CAACC,GAVjB;AAWD;;AACD,aAAKpB,gBAAL,CAAsB,KAAKV,sBAAL,CAA4BuB,QAA5B,CAAtB;AACD,OAvBD,EAwBEK,KAxBF,CAwBQG,GAAG,IAAGF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAxBd;AAyBD,KA1FY;;AAAA,SA4FbC,aA5Fa,GA4FI5D,KAAD,IAAW;AACzB;AACA,UAAGA,KAAK,KAAK,SAAb,EAAuB;AACrB,aAAKY,QAAL,CAAchB,YAAd;AACD,OAFD,MAEO,IAAGI,KAAK,KAAK,MAAb,EAAoB;AACzB,aAAKY,QAAL,CAAc;AAACX,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACD,WAAKW,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KApGY;;AAEX,SAAK2C,KAAL,GAAa/C,YAAb;AACD;;AAmGDiE,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEC,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACS,MAAA,MAAM,EAAExE,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAKA,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKsD,KAAL,CAAW1C,UAAnC;AAA+C,MAAA,aAAa,EAAE,KAAK2D,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAME,KAAKjB,KAAL,CAAW3C,KAAX,KAAqB,MAArB,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,IAAD;AACA,MAAA,IAAI,EAAE,KAAK2C,KAAL,CAAWzC,IAAX,CAAgBE,IADtB;AAEA,MAAA,OAAO,EAAE,KAAKuC,KAAL,CAAWzC,IAAX,CAAgBI,OAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eASE,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAE,KAAKiC,aAAnC;AAAkD,MAAA,cAAc,EAAE,KAAKG,cAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAW5C,KAAnC;AAA0C,MAAA,QAAQ,EAAE,KAAK4C,KAAL,CAAW7C,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,GAeI,KAAK6C,KAAL,CAAW3C,KAAX,KAAqB,QAArB,gBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKU,QAAvB;AAAiC,MAAA,aAAa,EAAE,KAAKkD,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKlD,QAAzB;AAAmC,MAAA,aAAa,EAAE,KAAKkD,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBR,CADA;AA6BD;;AArIyB;;AAwI5B,eAAepD,GAAf","sourcesContent":["import React , {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\n\nconst particlesOptions ={\n  particles: {\n    number:{\n      value: 100,\n      density:{\n        enable: true,\n        value_area: 800\n      }\n    }\n  }                \n}\n\nconst initialState = {\n      input:'',\n      imageUrl:'',\n      boxes: {},\n      route:'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n\n      }\n    }\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data)=> {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // calculateFacelocation = (data) => {\n  //   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n  //   const image =document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return{\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height), \n  //   }\n  // }\n\ncalculateFaceLocation = (region, width, height) => {\n    const faceRegion = region.region_info.bounding_box\n\n    return {\n      leftCol: faceRegion.left_col * width,\n      topRow: faceRegion.top_row * height,\n      rightCol: width - faceRegion.right_col * width,\n      bottomRow: height - faceRegion.bottom_row * height,\n    }\n  }\n \n  calculateFacesLocation = (data) => {\n    const clarifaiFaceRegions = data.outputs[0].data.regions\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    const faceLocations = clarifaiFaceRegions.map((region) =>\n      this.calculateFaceLocation(region, width, height)\n    )\n\n    return faceLocations\n  }\n\n  \n  displayFaceBoxes = (boxes) => {\n    this.setState({ boxes: boxes })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input : event.target.value });\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input});\n    \n    fetch('https://infinite-wildwood-75401.herokuapp.com/imageurlfaces', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n           })\n        }).then(response => response.json())\n\n    .then(response => {\n      if(response){\n        fetch('https://infinite-wildwood-75401.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n           })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        }).catch(console.log)\n      }\n      this.displayFaceBoxes(this.calculateFacesLocation(response))\n    })\n     .catch(err=> console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    //this is the place where you can add the free login\n    if(route === 'signout'){\n      this.setState(initialState);\n    } else if(route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n    {/*Add All the components you want in the project here*/}\n     <Particles className='particles'\n              params={particlesOptions}\n      />\n    <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n    { this.state.route === 'home'\n     ?  <div>\n          \n          <Logo />\n          \n          <Rank \n          name={this.state.user.name}\n          entries={this.state.user.entries}\n          />\n          \n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl} /> \n      </div>  \n\n      : (\n          this.state.route === 'signin' \n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n        )\n      }\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}