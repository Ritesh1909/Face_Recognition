{"ast":null,"code":"var _jsxFileName = \"/Users/riteshsharma/face_recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: '6bd7b9180d584008ad51d8a1e3d6431d'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFacelocation = (region, width, height) => {\n      const faceRegion = region.region_info.bounding_box;\n      return {\n        leftCol: faceRegion.left_col * width,\n        topRow: faceRegion.top_row * height,\n        rightCol: width - faceRegion.right_col * width,\n        bottomRow: height - faceRegion.bottom_row * height\n      };\n    };\n\n    this.calculateFaceslocation = data => {\n      const clarifaiFaceRegions = data.outputs[0].data.regions;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const faceLocations = clarifaiFaceRegions.map(region => this.calculateFacelocation(region, width, height));\n      return faceLocations;\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/imageurlfaces', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceslocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      //this is the place where you can add the free login\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/riteshsharma/face_recognition/src/App.js"],"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Signin","Register","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFacelocation","region","width","height","faceRegion","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","calculateFaceslocation","clarifaiFaceRegions","outputs","regions","image","document","getElementById","Number","faceLocations","map","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\n\nconst app = new Clarifai.App({\n  apiKey: '6bd7b9180d584008ad51d8a1e3d6431d'\n});\n\nconst particlesOptions ={\n  particles: {\n    number:{\n      value: 100,\n      density:{\n        enable: true,\n        value_area: 800\n      }\n    }\n  }                \n}\n\n\nconst initialState = {\n      input:'',\n      imageUrl:'',\n      box: {},\n      route:'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n\n      }\n    }\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data)=> {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // calculateFacelocation = (data) => {\n  //   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n  //   const image =document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return{\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height), \n  //   }\n  // }\n\n  calculateFacelocation = (region, width, height) => {\n    const faceRegion = region.region_info.bounding_box\n\n    return {\n      leftCol: faceRegion.left_col * width,\n      topRow: faceRegion.top_row * height,\n      rightCol: width - faceRegion.right_col * width,\n      bottomRow: height - faceRegion.bottom_row * height,\n    }\n  }\n\n  calculateFaceslocation = (data) => {\n    const clarifaiFaceRegions = data.outputs[0].data.regions\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    const faceLocations = clarifaiFaceRegions.map((region) =>\n      this.calculateFacelocation(region, width, height)\n    )\n\n    return faceLocations;\n  }\n\n  displayFaceBox = (box) =>{\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input : event.target.value });\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/imageurlfaces', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n           })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        }).catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceslocation(response))\n    })\n     .catch(err=> console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    //this is the place where you can add the free login\n    if(route === 'signout'){\n      this.setState(initialState);\n    } else if(route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n    {/*Add All the components you want in the project here*/}\n     <Particles className='particles'\n              params={particlesOptions}\n      />\n    <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n    { this.state.route === 'home'\n     ?  <div>\n          \n          <Logo />\n          \n          <Rank \n          name={this.state.user.name}\n          entries={this.state.user.entries}\n          />\n          \n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> \n      </div>  \n\n      : (\n          this.state.route === 'signin' \n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n        )\n      }\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}